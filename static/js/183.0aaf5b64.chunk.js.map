{"version":3,"file":"static/js/183.0aaf5b64.chunk.js","mappings":"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","sources":["components/Error/Error.jsx","components/FilterContact/FilterContact-style.js","components/FilterContact/FilterContact.jsx","components/FormContact/FormContact-style.js","components/FormContact/FormContact.jsx","components/ListContact/ListContact-style.js","components/ListContactItem/ListContactItem-style.js","components/ListContactItem/ListContactItem.jsx","components/ListContact/ListContact.jsx","components/Loading/LoadingContacts/LoadingContact/LoadingContacts-style.js","components/Loading/LoadingContacts/LoadingContact/LoadingContacts.jsx","components/Section/Section-style.js","components/Section/Section.jsx","pages/ContactsPage/ContactsPage.jsx"],"sourcesContent":["import React from 'react'\n\nconst Error = ({error}) => {\n  return (\n    error? <h2>{error}</h2> : <h2>Not found page</h2>\n  )\n}\n\nexport default Error","import { styled } from 'styled-components';\n\n\nexport const BoxFilter = styled.div`\n    display: flex;\n    width: 300px;\n    box-sizing: border-box;\n    flex-direction: column;\n    gap: 20px;\n    padding: 20px 25px;\n    border: solid gray 1px;\n    border-radius: 4px;\n    margin-bottom:  10px;\n`\n\nexport const LableFilter = styled.label`\n    font-size: 18px;\n`\n\nexport const InputFilter = styled.input`\n  padding: 3px 5px;\n  border-radius: 4px;\n  border: solid gray 1px;\n`;","import { useDispatch, useSelector } from 'react-redux';\nimport { BoxFilter, LableFilter, InputFilter} from './FilterContact-style';\nimport { selectFilter } from 'redux/selectors';\nimport { filterContact } from 'redux/sliceFilter';\n\n\n\nexport const Filter= ()=>{\n    const filter = useSelector(selectFilter)\n    const dispatch = useDispatch()\n\n\n   const handleChange = (even)=>{\n        dispatch(filterContact(even.target.value))\n    }\n\nreturn (\n    <>\n        <BoxFilter>\n            <LableFilter htmlFor=\"filter\">Find contacts by name</LableFilter>\n            <InputFilter\n                type=\"text\"\n                name=\"filter\"\n                onChange={handleChange}\n                id=\"filter\"\n                placeholder=\"Enter a name you want to find\"\n                value={filter.value}\n            />\n        </BoxFilter>\n        \n    </>\n)\n}\n\n\n","import { styled } from \"styled-components\"\n\n\n\nexport const Form = styled.form`\n    box-sizing: border-box;\n    padding: 20px 25px;\n    border: solid gray 1px;\n    border-radius: 4px;\n    width: 300px;\n    display: flex;\n    flex-direction: column;\n    gap: 15px;\n    \n\n`\n\nexport const ButtonForm = styled.button`\n  background-color: #b0fbdf;\n  width: 150px;\n  padding: 10px 5px;\n  margin-left: auto;\n  margin-right: auto;\n  border-radius: 10px;\n  border: solid gray 1px;\n  &:hover {\n    background-color: #0bcb84;\n    cursor: pointer;\n  }\n  `;\n","// import PropTypes from 'prop-types';\nimport Notiflix from 'notiflix';\nimport { Form, ButtonForm } from './FormContact-style';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectContacts } from 'redux/selectors';\nimport { addContactsThunk } from 'redux/thunks';\n\n\nexport const FormContact = () => {\n\n\nconst dispatch = useDispatch()   \nconst contacts = useSelector(selectContacts)\n\n  \nconst handleSubmit = event => {\nevent.preventDefault();\n\n  const form = event.target\n\n  const newContact = {\n    name: form.elements.name.value,\n    number:form.elements.number.value,\n}\n\nif (contacts.find(\n  contact => contact.name.toLowerCase() === newContact.name.toLowerCase()\n  )\n  ) {\n    return Notiflix.Notify.failure(`${newContact.name} is already in contacts`);\n  }\n  \n\n\ndispatch(addContactsThunk(newContact))\n  form.reset()\n  \n};\n  \n\n\n\n\n  \n  return (\n    <>\n      <Form onSubmit={handleSubmit}>\n      <label htmlFor=\"name\">Name</label>\n      <input\n          type=\"text\"\n          name=\"name\"\n          id=\"name\"\n          placeholder=\"Enter a contact name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          />\n      <label htmlFor=\"number\">Number</label>\n      <input\n          type=\"tel\"\n          name=\"number\"\n          id=\"number\"\n          placeholder=\"Enter a contact number\"\n          pattern=\"\\+?\\d{1,4}?[ .\\-\\s]?\\(?\\d{1,3}?\\)?[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          />\n      <ButtonForm type=\"submit\">Add Contact</ButtonForm>\n      </Form>\n    </>\n)\n}\n    \n","import { styled } from 'styled-components';\n\n\nexport const List = styled.ul`\n    list-style: none;\n    margin: 0;\n    padding: 0;\n    display: flex;\n    flex-direction: column;\n    gap: 15px;\n    margin-left: 20px;\n`","import { styled } from 'styled-components';\n\n\nexport const ItemContact = styled.li`\n    display: flex;\n    gap: 30px;\n    \n`\n\nexport const ButtonDelete = styled.button`\n  background-color: #b0fbdf;\n  border-radius: 8px;\n  border: solid gray 1px;\n  &:hover {\n    background-color: #0bcb84;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { ItemContact, ButtonDelete } from './ListContactItem-style';\nimport { useDispatch,   } from 'react-redux';\nimport { deleteContactsThunk } from 'redux/thunks';\n\n\nexport const ListContactItem = ({name, number, id,}) => {\n    const dispatch = useDispatch()\n    \n    const handleDelete = ()=>{\n\n        dispatch(deleteContactsThunk(id))\n    } \n\n\n\n\n    return (\n        <>\n            <ItemContact key={id}>\n                {name}: {number}\n                <ButtonDelete onClick={handleDelete}>Delete</ButtonDelete>\n            </ItemContact>\n        </>\n    )\n}\n\nListContactItem.propTypes = {\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n    id: PropTypes.string.isRequired,\n}","import { List } from './ListContact-style';\nimport { useSelector } from 'react-redux';\nimport { selectContacts, selectFilter } from 'redux/selectors';\nimport { ListContactItem } from 'components/ListContactItem/ListContactItem';\n\n\nexport const ListContact = ()=>{\n\nconst contacts = useSelector(selectContacts)\n\nconst filter = useSelector(selectFilter)\n\n\nconst handleFil = contacts.filter(contact =>\n    contact.name.toLowerCase().includes(filter.toLowerCase()))\n    \n        return (\n            <>\n                <List>\n                    {handleFil.map(({ id, name, number }) =>\n                        <ListContactItem\n                        key={id}\n                        id={id}\n                        name={name}\n                        number={number}\n                        /> )}\n                </List>\n            </>\n        )\n    }\n\n","import { styled } from \"styled-components\";\n\nexport const BoxLoading = styled.div`\n    margin-left: 100px;\n`","\nimport { TailSpin } from  'react-loader-spinner'\nimport { BoxLoading } from './LoadingContacts-style'\n\n\nconst Loading = () => {\n  return (\n    <BoxLoading>\n        <TailSpin\n        height=\"50\"\n        width=\"50\"\n        color=\"#0bcb84\"\n        ariaLabel=\"tail-spin-loading\"\n        radius=\"1\"\n        wrapperStyle={{}}\n        wrapperClass=\"\"\n        visible={true}\n        />\n    </BoxLoading>\n  )\n}\n\nexport default Loading","import { styled } from 'styled-components';\n\n\nexport const WrapSection = styled.div`\n    margin-left: 20px;\n\n    \n`","import PropTypes from 'prop-types';\nimport { WrapSection } from './Section-style';\n\n\nexport const Section = ({title, children}) => {\n    return (\n        <> \n            <WrapSection>\n                <h2>{title}</h2>\n                {children}\n            </WrapSection>\n            \n        </>\n    )\n}\n\n\nSection.propTypes = {\n    title: PropTypes.string.isRequired,\n    children: PropTypes.node.isRequired,\n}","import Error from \"components/Error/Error\"\nimport { Filter } from \"components/FilterContact/FilterContact\"\nimport { FormContact } from \"components/FormContact/FormContact\"\nimport { ListContact } from \"components/ListContact/ListContact\"\nimport Loading from \"components/Loading/LoadingContacts/LoadingContact/LoadingContacts\"\nimport { Section } from \"components/Section/Section\"\nimport { useEffect } from \"react\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { selectContacts, selectError, selectIsLoading,   } from \"redux/selectors\"\nimport { getAllContactsThunk } from \"redux/thunks\"\n\nconst ContactsPage = () => {\n    const dispatch = useDispatch()\n  \n\n\n    const contacts = useSelector(selectContacts)\n    \n    const isLoading = useSelector(selectIsLoading) \n    \n    const error = useSelector(selectError)\n    \n    \n  // console.log('contacts', contacts)\n\n    useEffect(()=>{\n      dispatch(getAllContactsThunk())\n    },[dispatch])\n    \n    return (\n      <>\n           <Section title=\"Phonebook\">\n            <FormContact />\n          </Section>\n          <Section title=\"Contacts\">\n            <Filter/>\n            {isLoading&& <Loading/>}\n            {error && <Error error={error}/>}\n            {contacts&&<ListContact/>}\n          \n          </Section>\n        </>\n      );\n}\n\nexport default ContactsPage"],"names":["_ref","error","_jsx","children","BoxFilter","styled","_templateObject","_taggedTemplateLiteral","LableFilter","_templateObject2","InputFilter","_templateObject3","Filter","filter","useSelector","selectFilter","dispatch","useDispatch","_Fragment","_jsxs","htmlFor","type","name","onChange","even","filterContact","target","value","id","placeholder","Form","ButtonForm","FormContact","contacts","selectContacts","onSubmit","event","preventDefault","form","newContact","elements","number","find","contact","toLowerCase","Notiflix","concat","addContactsThunk","reset","pattern","title","required","List","ItemContact","ButtonDelete","ListContactItem","onClick","deleteContactsThunk","ListContact","handleFil","includes","map","BoxLoading","TailSpin","height","width","color","ariaLabel","radius","wrapperStyle","wrapperClass","visible","WrapSection","Section","isLoading","selectIsLoading","selectError","useEffect","getAllContactsThunk","Loading","Error"],"sourceRoot":""}